 /**********************************************************************
  * PROGRAM NAME  DLM04OA1
  *               (OLD NAME MORT04)
  *
  * DESCRIPTION   UPDATES 2004 MORTALITY DATASET LIBRARIES AND ALSO
  *               POPULATES MVDS LIBRARIES.  1 OF 2 JOBS IN DLM04OA 
  *               SERIES FOR ANNUAL LIBRARIES FOR OLD FORMAT STATES 
  *
  *               THIS PROGRAM WILL READ THE SPECIFIED BF19 MORTALITY
  *               FILE AND AFTER CONVERTING CERTAIN DATA FIELDS PERFORM
  *               A PROC FREQ ON ALL APPLICABLE ITEMS, WRITING THE PROC
  *               FREQ RESULTS TO THE MORTALITY SAS DATA LIBRARY.
  *
  * CALLED BY     FCAST, MORGO2
  * CALLS TO
  *
  * INPUT MVARS   TMPF  (SET TO 'SASAF' WHEN RUN FROM FCAST)
  *               ST    (STATE ABBREVIATION)
  *
  * PROGRAMMER    <SEVERAL>
  * DATE WRITTEN  22 DEC 2003
  *
  * UPDATE LOG
  * 08/08/97   MODIFIED THE COMPUTED YEAR, MONTH AND DAY OF DEATH TO
  *            MAKE THE COMPUTATION MORE ACCURATE ALSO ADDED AN ITEMID
  *            NUMBER TO EACH OBSERVATION
  * 08/12/97   CORRECTED THE MARNE2 EDIT SEE DATED COMMENTS BELOW
  * 08/26/97   ADDED FREQUENCY FOR STATE OF RESIDENCE
  *            THIS WILL BE USED BY THE US TOTAL REPORT
  * 08/27/97   NEW VERSION DOES NOT USE FORMMATED VALUES
  * 09/06/97   ADDED A FREQUENCY OF INFANT DEATHS
  * 01/08/98   ADDED A WEIGHT TO THE DATA SO IT WILL BE READ CORRECTLY
  *            BY THE PROC FORECAST
  *            ALSO ADDED CODE TO CHECK FOR BDATE LT DDATE
  * 08/18/98   ADDED CODE TO CHECK TO SEE COMPYR IS NE TO 999 BEFORE
  *            COMPUTING THE AGEGT5 FIELD
  * 10/22/98   MODIFIED CODE TO DISPLAY INVALID DAY OF DEATH AND BIRTH
  *            DAY EQUAL 99 SEE DATED COMMENTS BELOW
  * 02/01/99   MODIFIED CODE TO ACCEPT CHANGES IN THE FORMAT OF YEAR
  *            FROM A TWO DIGIT TO A FOUR DIGIT FIELD
  *            REMEMBER EACH YEAR CHANGE CENTURY TO THE CORRECT
  *            SPECIFICATIONS
  * 02/15/99   DETERMINE THE CENTURY BASED UPON THE BIRTH YEAR
  *            EVERY YEAR SOMEONE NEEDS TO CHANGE THE CODE
  *            IF BIRTHYR LT 2000 TO THE NEXT FOLLOWING YEAR
  *            EXAMPLE: IN YEAR 2000 CHANGE BIRTHYR LT 2000 TO 2001
  * 08/27/99   ADDED BIRTHDY AND DAY TO STATEMENT WHICH USES YEARS
  *            TO DETERMINE AGE IF BIRTHDY OR DAY = 99
  * 09/28/99   ADDED A TITLE LINE TO INCLUDE DATASET NAME
  * 01/19/2000 CREATED THIS FOR DATA YEAR 2000
  * 02/29/2000 ADDED WAIT OPTN TO LIBNAME STMT FOR UPDATE PROCESSING
  * 10/10/2000 (TLL) ADDED THE RANGE TO COMPUTE CENTURY FOR BIRTH YEAR
  *            OF 2000
  * 12/12/2000 MODIFY PROGRAM FOR DATA YEAR 2001
  * 01/20/2001 MODIFIED PROGRAM TO CORRECTLY COMPUTE THE CENTURY WHEN
  *            THE YEAR IS GT 2000 (BMB)
  * 08/14/2001 MODIFIED PROGRAM TO CORRECTLY COMPUTE THE CENTURY WHEN
  *            THE YEAR IS GT 2000 - HAD TO DO A LITTLE MORE WORK (BMB)
  * 01/23/2002 (BHB6) MODIFIED THE DATA NULL STEP TO DELETE ANY
  *            ALIAS RECORDS DISCOVERED THAT ALIAS RECORDS MAY NOT
  *            HAVE A STATE OF OCCURRENCE
  * 07/10/2002 (BQH0)ADDED 3 NEW VARIABLES TO SAS DATASETS TO ACCOMODATE
  *            THE COMMUNICATION LOG
  * 11 JUL 2002 (KJK) ADDED OPTION TO LIMIT REPORT TO RANGE OF
  *             CERTIFICATE NUMBERS
  * 12 DEC 2003 (BQH0) MODIFIED PROGRAM FOR DATA YEAR 2003
  * 02 FEB 2003 (BHB6) REMOVED MACRO STATES
  * 14 OCT 2003 (BHB6) REMOVED LOW AND HIGH CERT PROCESSING
  * 22 DEC 2003 (BQH0) REMOVED UNUSED VARIABLE BYEAR.  ADDED LOGIC TO
  *             DETECT CONDITION WHERE 99 APPEARS AS DAY OR MONTH OR 9999
  *             APPEARS AS YEAR TO AVOID BOMBING AT THE INPUT FUNCTION.
  *             CREATED YEAR 2004 VERSION OF PROGRAM.                      
  *********************************************************************/
OPTIONS LS=135 CAPS NOTES SOURCE ERRORABEND FILEMSGS;                           
OPTIONS MAUTOSOURCE SASAUTOS='DWJ2.MACROS.LIB';                                 

%GLOBAL ST I TMPF;

* MUST CHANGE EACH YEAR TO REFLECT THE DATA YEAR AT WHICH TO START ;
* PROCESSING DATA;
%LET I=2004;

%MACRO DATASET;
  %IF &TMPF = 'SASAF' %THEN
   %DO;
     LIBNAME MOR&I "DWJ2.MOR&I..LIBRARY.TEMP" DISP=OLD WAIT=250;
   %END;
  %ELSE
    %DO;
     LIBNAME MOR&I "DWJ2.MOR&I..LIBRARY" DISP=OLD WAIT=250;
    %END;
%MEND DATASET;

%DATASET

DATA ALL (KEEP=SEX MONTH DAY YEARD BIRTHMO BIRTHDY BIRTHYR
          CENTURY AGE COMPYR AGEGT5 AGEERR MARNE2 COMPMO
          COMPDY BIRTHPLC TYP_PLAC MARITAL HISPANIC UNIT
          RACE EDUC EDUCERR AUTOPSY INJURY STATE STRES
          CNTYRES COUNTY);
  LENGTH RACE $ 2;
  LENGTH COMPYR 3. COMPMO 2. COMPDY 2.;
  LENGTH CENTURY $3;
  LENGTH UNIT $1;
  LENGTH BDAT $8 DDAT $8;
  INFILE IN TRUNCOVER;
  INPUT ALIAS $ 47 SEX $ 48 MONTH $ 49-50 DAY $ 51-52 YEAR $ 135-138
        AGE $ 64-66 BIRTHMO $ 67-68 BIRTHDY $ 69-70 BIRTHYR $ 139-142
        BIRTHPLC $ 74-75 TYP_PLAC $ 76 STATE $ 77-78 MARITAL $ 82
        STRES $ 89-90 HISPANIC $ 94 RACES $ 95 EDUC $ 96-97
        INJURY $ 117 AUTOPSY $ 122 CERTNO $ 5-10
        STBIRTH $ 133-134 CNTYRES $ 91-93 COUNTY $ 79-81;

  IF ALIAS = 1 THEN DELETE;

  * INITIALIZE THE EDIT FIELDS;
  AGEGT5 = 0;
  AGEERR = 0;
  MARNE2 = 0;
  EDUCERR = 0;

  * PROTECT THE ORIGINAL VALUE;
  DDAY = DAY;
  BDAY = BIRTHDY;

  * SOMETIMES YOU MAY HAVE A MONTH BUT THE DAY EQUALS 99;
  IF DAY = '99' OR BIRTHDY = '99' THEN
    DO;
      IF MONTH NE '99' AND BIRTHMO NE '99' THEN
         DO;
           IF DAY = '99' THEN DDAY = '01';
           IF BIRTHDY = '99' THEN BDAY = '01';
         END;
    END;

  * THERE MAY BE CASES WHERE SOMEONE ENTERS 02/29 AND IT IS NOT A LEAP;
  * YEAR SO JUST SET 02/29 TO 02/28;
  IF BIRTHMO = '02' AND BIRTHDY = '29' THEN BDAY = '28';
  IF MONTH = '02' AND DAY = '29' THEN DDAY = '28';

  * PROTECT AGAINST RECEIVING 99 OR 9999 IN COMBINATIONS THAT CAUSE A FAILURE;
  * WHEN USED IN THE INPUT FUNCTION BELOW;
  IF (BIRTHMO EQ '99') OR (BDAY EQ '99') OR (BIRTHYR EQ '9999') THEN
    BDAT = '';
  ELSE
    BDAT = BIRTHMO||BDAY||BIRTHYR;

  IF (MONTH EQ '99') OR (DDAY EQ '99') OR (YEAR EQ '9999') THEN
    DDAT = '';
  ELSE
    DDAT = MONTH||DDAY||YEAR;

  * CHECK FOR INCOMPLETE AND 'NOT CLASS' DATES;
  IF BIRTHYR = '9999' OR BIRTHYR = '' THEN COMPYR = 999;

  IF YEAR = '9999' OR YEAR = '' THEN COMPYR = 999;
  IF DDAT = '' THEN COMPYR = 999;
  IF BDAT = '' THEN COMPYR = 999;

  * THE DATE OF DEATH IS GREATER THAN THE DATE OF BIRTH;
  IF COMPYR NE 999 THEN
    DO;
      BDAT2 = INPUT(BDAT,MMDDYY10.);
      DDAT2 = INPUT(DDAT,MMDDYY10.);
      IF BDAT2 GT DDAT2 THEN COMPYR = 999;
    END;

  IF COMPYR NE 999 THEN
     DO;
     * IF ONE OF THE MONTHS EQUAL 99 THEN USE THE YEARS TO DETERMINE AGE;
     IF MONTH = '99' OR BIRTHMO = '99' OR BIRTHDY = '99' OR DAY = '99' THEN
        DO;
          COMPYR = YEAR - BIRTHYR;
        END;
     ELSE
        DO;
          * DETERMINE THE COMPLETE DATE OF BIRTH AND DEATH;
          BDATE = INPUT(BDAT,MMDDYY10.);
          DDATE = INPUT(DDAT,MMDDYY10.);
          IF BDATE NE . OR DDATE NE . THEN
          DO;
            AGEDY=INTCK('DAYS',BDATE,DDATE);
            IF AGEDY LE 30 THEN
               DO;
                 COMPYR = 0;
                 COMPDY = AGEDY;
               END;
            IF AGEDY GT 30 AND AGEDY LT 365 THEN
               DO;
                 COMPMO = INT(AGEDY/30);
                 COMPYR = 0;
               END;
            IF AGEDY GT 365 THEN
               DO;
                 COMPYR=INT(INTCK('MONTH',BDATE,DDATE)/12);
                 IF MONTH(BDATE)=MONTH(DDATE) THEN
                    COMPYR = COMPYR - (DAY(BDATE)>DAY(DDATE));
               END;
            IF AGEDY = 365 THEN COMPYR = 1;
            IF BDAT = DDAT THEN COMPDY = 0;
          END;
       END;
    END;

   * DETERMINE THE CENTURY BASED UPON THE BIRTH YEAR;
   IF (BIRTHYR GE '1800') AND (BIRTHYR LE '1899') THEN CENTURY = '800';
   IF (BIRTHYR EQ '1900')                         THEN CENTURY = '900';
   IF (BIRTHYR GE '1901') AND (BIRTHYR LE '1999') THEN CENTURY = '901';
   IF (BIRTHYR GE '2000') AND (BIRTHYR LE 2099)   THEN CENTURY = '200';
   IF (BIRTHYR EQ '9999') OR (BIRTHYR EQ '')      THEN CENTURY = '999';
   IF (BIRTHYR LT '1800')                         THEN CENTURY = '000';

    * COMPUTE THE YEAR OF DEATH;
    * IMPROVED METHOD TO COMPUTE THE YEAR OF DEATH;
    * USES ENTIRE DATE INSTEAD OF YEAR ONLY 08/97;
    UNIT = SUBSTR(AGE,1,1);

    * CONDITIONAL EDIT PROCESSING;
    * AGEERR;
    * AGEGT5 WHEN THE DIFF BETWEEN REPORTED AND COMPUTED AGE IS GT 5;
    * MARNE2 WHEN THE AGE IS LESS THAN 12 BUT THE MARITAL STATUS IS NOT 1;
    * MARNE2 WHEN THE AGE UNIT EQ 2-6(MIN,HRS,DYS,ETC) AND THE MARITAL;
    *  STATUS IS NOT SINGLE;
    * EDUCERR WHEN THE AGE UNIT EQ 2-6 AND THE EDUC YEARS GT 00;
    *                                          (BUT NOT EQ 99);
    * EDUCERR WHEN THE AGE COMPARED WITH EDUC IS OUTSIDE OF A ;
    *  REASONABLE VALUE;
    CYR = YEAR;
    IF BIRTHYR = CYR THEN
       DO;
         IF UNIT = '9' THEN AGEERR = 1;
         IF AGE GE 003 AND AGE LE 199 THEN AGEERR = 1;
       END;
    IF BIRTHYR = (CYR-1) THEN
       DO;
         IF UNIT = '9' THEN AGEERR = 1;
         IF AGE GE 003 AND AGE LE 199 THEN AGEERR = 1;
       END;

    IF AGE NE 999 THEN
       DO;
         IF UNIT = '0' THEN
            DO;
              * 08/18/98 ADDED CODE TO CHECK TO SEE IF COMPYR IS NOT;
              * EQUAL TO 999 BEFORE CONTINUING;
              IF COMPYR NE 999 THEN
                 DO;
                   YRS = SUBSTR(AGE,2,2);
                   IF YRS GE COMPYR THEN EDTAGE = YRS - COMPYR;
                   IF YRS LT COMPYR THEN EDTAGE = COMPYR - YRS;
                   IF EDTAGE GT 5 THEN AGEGT5 = 1;
                 END;
                   * 08/12/97 ADDED MARITAL NE 1 TO IF STATEMENT;
                   IF YRS LT 12 AND MARITAL NE 1 THEN MARNE2 = 1;
            END;

         IF UNIT = '1' THEN
            DO;
              YRS = AGE;
              IF YRS GE COMPYR THEN EDTAGE = YRS - COMPYR;
              IF YRS LT COMPYR THEN EDTAGE = COMPYR - YRS;
              IF EDTAGE GT 5 THEN AGEGT5 = 1;
              * 08/12/97 COMMENTED OUT FOLLOWING LINE OF CODE;
              * IF YRS LT 12 THEN MARNE2 = 1;
            END;

         IF UNIT GT 1 THEN
           DO;
             IF MARITAL NE 9 THEN
               DO;
                 IF MARITAL NE 2 THEN MARNE2 = 1;
               END;
             IF EDUC NE 99 THEN IF EDUC GT 00 THEN EDUCERR = 1;
           END;

             IF UNIT = '0' AND EDUC NE 99 THEN
           DO;
             IF AGE < 005 AND EDUC GT 00 THEN EDUCERR = 1;
             IF AGE = 005 AND EDUC GT 01 THEN EDUCERR = 1;
             IF AGE = 006 AND EDUC GT 02 THEN EDUCERR = 1;
             IF AGE = 007 AND EDUC GT 03 THEN EDUCERR = 1;
             IF AGE = 008 AND EDUC GT 04 THEN EDUCERR = 1;
             IF AGE = 009 AND EDUC GT 05 THEN EDUCERR = 1;
             IF AGE = 010 AND EDUC GT 06 THEN EDUCERR = 1;
             IF AGE = 011 AND EDUC GT 07 THEN EDUCERR = 1;
             IF AGE = 012 AND EDUC GT 08 THEN EDUCERR = 1;
             IF AGE = 013 AND EDUC GT 09 THEN EDUCERR = 1;
             IF AGE = 014 AND EDUC GT 10 THEN EDUCERR = 1;
             IF AGE = 015 AND EDUC GT 11 THEN EDUCERR = 1;
             IF AGE = 016 AND EDUC GT 12 THEN EDUCERR = 1;
             IF AGE = 017 AND EDUC GT 13 THEN EDUCERR = 1;
             IF AGE = 018 AND EDUC GT 14 THEN EDUCERR = 1;
             IF AGE = 019 AND EDUC GT 15 THEN EDUCERR = 1;
           END;
       END;

    * CONVERT ALPHA RACE VALUES TO A NUMERIC VALUE;
    IF RACES = 'A' THEN RACE = '10';
    ELSE IF RACES = 'B' THEN RACE = '11';
    ELSE IF RACES = 'C' THEN RACE = '12';
    ELSE IF RACES = 'D' THEN RACE = '13';
    ELSE IF RACES = 'E' THEN RACE = '14';
    ELSE IF RACES = 'F' THEN RACE = '15';
    ELSE RACE = RACES;

    * ASSIGN THE YEAR OF DEATH TO YEARD;
    YEARD = YEAR;

    * INJURY WAS ADDED IN 1993;
    IF &I LT 1993 THEN INJURY = '';

    * BEGINNING IN 1995 THE AUTOPSY FIELD IS NO LONGER USED;
    *   IF &I GT 1994 THEN AUTOPSY = 9;
RUN;

PROC FREQ DATA=ALL;
  TABLES SEX / MISSING NOPRINT OUT=TEST1;
  TABLES MONTH / MISSING NOPRINT OUT=TEST2;
  TABLES DAY / MISSING NOPRINT OUT=TEST3;
  TABLES YEARD / MISSING NOPRINT OUT=TEST4;
  TABLES BIRTHMO / MISSING NOPRINT OUT=TEST5;
  TABLES BIRTHDY / MISSING NOPRINT OUT=TEST6;
  TABLES BIRTHYR / MISSING NOPRINT OUT=TEST7;
  TABLES CENTURY / MISSING NOPRINT OUT=TEST8;
  TABLES AGE   / MISSING NOPRINT OUT=TEST9;
  TABLES COMPYR /   MISSING NOPRINT OUT=TEST10;
  TABLES COMPMO/   MISSING NOPRINT OUT=TEST11;
  TABLES COMPDY/   MISSING NOPRINT OUT=TEST12;
  TABLES BIRTHPLC / MISSING NOPRINT OUT=TEST13;
  TABLES TYP_PLAC / MISSING NOPRINT OUT=TEST14;
  TABLES MARITAL / MISSING NOPRINT OUT=TEST15;
  TABLES HISPANIC / MISSING NOPRINT OUT=TEST16;
  TABLES RACE / MISSING NOPRINT OUT=TEST17;
  TABLES EDUC / MISSING NOPRINT OUT=TEST18;
  TABLES AUTOPSY / MISSING NOPRINT OUT=TEST19;
  TABLES INJURY  / MISSING NOPRINT OUT=TEST20;
  TABLES UNIT    / MISSING NOPRINT OUT=TEST21;
  TABLES AGEGT5  / MISSING NOPRINT OUT=TEST22;
  TABLES AGEERR  / MISSING NOPRINT OUT=TEST23;
  TABLES MARNE2  / MISSING NOPRINT OUT=TEST24;
  TABLES EDUCERR / MISSING NOPRINT OUT=TEST25;
  TABLES STRES   / MISSING NOPRINT OUT=TEST26;
  TABLES CNTYRES / MISSING NOPRINT OUT=TEST27;
  TABLES STATE   / MISSING NOPRINT OUT=TEST28;
  TABLES COUNTY  / MISSING NOPRINT OUT=TEST29;
RUN;

%MACRO ADDNO;
  %LOCAL K;
  /* 29 FREQ ITEMS */
  %DO K=1 %TO 29;
    DATA TEST&K;
     SET TEST&K;
     ITEMID = &K;
    RUN;
  %END;
%MEND ADDNO;

%ADDNO

DATA MOR&I..&ST&I;
  SET TEST1 TEST2 TEST3 TEST4 TEST5 TEST6 TEST7 TEST8 TEST9
      TEST10 TEST11 TEST12 TEST13 TEST14 TEST15 TEST16 TEST17
      TEST18 TEST19 TEST20 TEST21 TEST22 TEST23 TEST24 TEST25
      TEST26 TEST27 TEST28 TEST29;
RUN;


* CODE TO CREATE MVDS WILL FOLLOW THIS SEGMENT;                                 
**********************************************;                                 
