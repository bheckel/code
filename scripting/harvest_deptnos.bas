'SEE split_matrix_depts.xls FOR POSSIBLE ENHANCEMENTS.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Program Name: harvest_deptnos.bas
'
'      Summary: Based on passed spdsht, search for pattern and return each
'               find to the caller.
'               Assumes contiguous rows of data.  A blank row will terminate
'               the loop.
'               TODO use parameters for Likestring, length of string e.g. 7
'
'      Created: Thu Jun 10 1999 16:10:37 (Bob Heckel)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Array of Dept Numbers.
Public gDeptnos As Variant

Function Harvest(sXlsname As String) As Boolean
  On Error GoTo ENTROPY
  Dim sMsg as String

  Dim c  'what datatype??
  Dim sLookfor As String
  Dim i As Long
  Dim vaMyarray()
  Dim sTrimmed As String
  Dim iJustnums As Integer
  Dim sCropped As String
  
  ' TODO Assumes an open matrix.xls so check for it.

  ' Using LIKE below.
  sLookfor = "*Ent-Dept*540####*"

  i = 0
  For Each c In ActiveCell.CurrentRegion.Cells
    If c.Value Like sLookfor Then
      sTrimmed = Trim(c.Value)
      Debug.Print sTrimmed
      ' Now know where to start Mid.
      iJustnums = InStr(sTrimmed, "540")
      Debug.Print iJustnums
      ' E.g. 5401234 is 7 chars long.
      sCropped = Mid$(sTrimmed, iJustnums, 7)
      Debug.Print sCropped
      ' Populate the array.
      ReDim Preserve vaMyarray(i)
      vaMyarray(i) = sCropped
      i = i + 1
      Debug.Print vaMyarray(i - 1)
    End If
  Next

  gDeptnos = vaMyarray()
  Harvest = True

' Single exit point.
DAMAGEDEXIT:
  Exit Function

ENTROPY:
  If Err.Number <> 0 Then
    sMsg = "Error # " & Str(Err.Number) & " was generated by " _
              & Err.Source & Chr(13) & "Description: " & Err.Description
  MsgBox sMsg, , "An error has occurred in Function " & _
         "Harvest. " & Erl, Err.Helpfile, Err.HelpContext
  End If
  Resume DAMAGEDEXIT
End Function

