23-Jun-22 on metta WSL2 https://dev.to/bowmanjd/install-docker-on-windows-wsl-without-docker-desktop-34m9

sudo apt install --no-install-recommends apt-transport-https ca-certificates curl gnupg2
cat /etc/os-release  # ID=ubuntu, VERSION_CODENAME=focal
# Make apt trust the repo
#                                              ID
#                                            ______
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/trusted.gpg.d/docker.asc
# Add the repo
#                                                               VERSION_CODENAME
#                                                               _____
echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" | sudo tee
sudo apt -y update && sudo apt -y upgrade && sudo apt -y autoremove
sudo apt install docker-ce docker-ce-cli containerd.io
sudo usermod -aG docker $USER  # avoid using sudo (didn't work)
sudo dockerd # or sudo dockerd& if don't care about viewing logging
docker help run
# or
man docker-run
sudo docker version  # will show if Docker Engine is running as well as Client
sudo docker images
sudo docker ps  # any running containers?
sudo docker run hello-world
sudo docker run --rm hello-world
sudo docker pull ubuntu  # (optional) get newest image from Docker
sudo docker run ubuntu  # does nothing but start and finish
sudo docker run ubuntu uptime  # single command
sudo docker run -it ubuntu bash  # interactive terminal
sudo docker ps -a  # IMAGE:27941809078c
sudo docker run 27941809078c uname -a  # single command using image id
sudo docker run -i ubuntu cat /etc/*-release  # single command using repository name
sudo docker run -it 27941809078c  # interactive terminal using image id
sudo docker network ls  # all containers can communicate
sudo docker network create my-network  # limited, use -net my-network
sudo docker rm vibrant_tu  # remove container by name
sudo docker container prune  # cleanup remove all containers

---

sudo docker run --name myimgfoo hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pull complete
Digest: sha256:13e367d31ae85359f42d637adf6da428f76d75dc9afeb3c21faea0d976f5c651
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
...
sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND      CREATED          STATUS                      PORTS     NAMES
102b3ce18b6e   hello-world    "/hello"     36 seconds ago   Exited (0) 35 seconds ago             myimgfoo

---

# Named volumes for persistence:
sudo docker volume create myvol
sudo docker volume ls
sudo docker volume inspect myvol  # it's in /var
sudo docker image ls  # find 27941809078c image
sudo docker run -it --mount source=myvol,target=/mnt/bob --name cntr_persistu 27941809078c  # first time only
# root@54541ef80431:/# cat sdlkf > /mnt/bob/foo
sudo docker container ls -a  # cntr_persistu is there now
sudo docker run -it --mount source=myvol,target=/mnt 27941809078c  # subsequent
sudo docker rm cntr_persistu  # container is gone...
sudo vi /var/lib/docker/volumes/myvol/_data/foo  # ...but we saved the file created in the container

---

# Save container state

2022-09-03 01:00:50 sudo docker run -it ubuntu bash
2022-09-03 01:03:54 sudo docker ps -a |head
2022-09-03 01:04:50 sudo docker commit 205c55d3de6f ubuntu-bob
2022-09-03 01:05:03 sudo docker images
2022-09-03 01:05:34 sudo docker run -it ubuntu-bob bash

# Has git etc installed after  sudo docker run -it ubuntu bash
2022-09-13 21:50:54 sudo docker start -a -i peaceful_wilson
2022-09-13 21:54:56 sudo docker commit peaceful_wilson
2022-09-13 21:55:04 sudo docker images  # REPOSITORY:<none>  TAG:<none>  IMAGE ID:8d7ec8de6c83
2022-09-13 21:55:05 sudo docker login --username rshdev
2022-09-13 21:56:29 sudo docker tag 8d7ec8de6c83 rshdev/bob_peaceful_wilson
2022-09-13 21:56:29 sudo docker run -it rshdev/bob_peaceful_wilson

---

# Restart last container
sudo docker start -a -i peaceful_wilson  # by name
sudo docker start -a -i `docker ps -q -l`  # by ID

---

$ sudo docker run -p 8888:5000 rshdev/catnip
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
172.17.0.1 - - [06/Jan/2021 21:20:08] "GET / HTTP/1.1" 200 -
172.17.0.1 - - [06/Jan/2021 21:20:10] "GET /favicon.ico HTTP/1.1" 404 -
172.17.0.1 - - [06/Jan/2021 21:20:56] "GET / HTTP/1.1" 200 -
172.17.0.1 - - [06/Jan/2021 21:21:02] "GET / HTTP/1.1" 200 -
^C0 bhecke@ppa ~/ Wed Jan 06 16:21:55  
$ sudo docker ps                                                                                 
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

---

# https://docker-curriculum.com

2021-01-04 12:15:14 cd projects/
2021-01-04 12:15:15 git clone https://github.com/prakhar1989/docker-curriculum.git
2021-01-04 12:16:56 cd docker-curriculum/flask-app/
2021-01-04 12:17:00 vi Dockerfile 
2021-01-04 12:20:47 sudo docker build -t rshdev/catnip .
2021-01-04 12:44:29 sudo docker run -p 8888:5000 rshdev/catnip
2021-01-04 12:47:59 sudo docker images
2021-01-04 12:48:06 sudo docker ps -a
2021-01-04 12:49:04 sudo docker login --username rshdev
2021-01-04 12:50:31 sudo docker push rshdev/catnip
# Now it runs from anywhere
2021-01-04 12:54:37 sudo docker run -p 8888:5000 rshdev/catnip

---

# Pull the Busybox image from the registry and ask the Docker client to run a
# container based on that image
sudo docker pull busybox
sudo docker run busybox uptime
sudo docker run -it busybox sh  # -i for interactive
exit

sudo docker pull ubuntu:16.04
# Could just run this to implicitly pull
sudo docker run -it ubuntu:16.04 bash  # will run 'latest' if no tag like 16.04

sudo docker ps -a
sudo docker rm hopeful_brown
sudo docker rm 75880a5d204f 8aed4f809b41
# Delete all those containers
sudo docker rm $(sudo docker ps -a -q -f status=exited)

sudo docker images
# Delete one of those images
sudo docker rmi 021a1b85e641

docker run --rm prakhar1989/static-site  # -rm container gets removed after run
Ctr-C
# Expose port (and use -P for a non-random NAMES like lucid_benz)
sudo docker run -d -P --name static-site prakhar1989/static-site
sudo docker port static-site
# http://localhost:49154
sudo docker stop static-site  # need this for non-interactive containers that end with Ctr+C

sudo docker container logs 15051871e6d7  # pass CONTAINER ID from ps -a

# Query Docker Hub
sudo docker search oracle

---

# Install docker
 2021-01-02 11:00:43 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
 2021-01-02 11:01:03 sudo apt-key fingerprint 0EBFCD88
 2021-01-02 11:13:14 sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
 2021-01-02 11:13:42 sudo apt-get update
 2021-01-02 11:14:26 sudo apt-get install docker-ce docker-ce-cli containerd.io
 2021-01-02 11:16:21 sudo docker run hello-world
 2021-01-02 11:34:48 sudo docker images
 2021-01-02 11:37:43 sudo docker ps -a
 2021-01-02 12:09:00 sudo docker run -it ubuntu bash

