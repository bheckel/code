#!/usr/bin/perl
##############################################################################
#     Name: stat_file_timedatestamps.gsk_codereview.pl
#
#  Summary: List date time stamps in standardized format.
#           Used for GSK code review form.
#
#  $ /home/rsh86800/code/perl/stat_file_timedatestamps.gsk_codereview.pl .
#
#  Created: Mon 03 Aug 2009 10:44:46 (Bob Heckel)
# Modified: Thu 09 May 2013 09:14:45 (Bob Heckel)
##############################################################################
use File::Find;

###@dirs = ('.');
###@dirs = ('LotTracking', 'ZebAppPortfolio');
###@dirs = ('U:\projects\dpv2\CODE');
###@dirs = ('ZebAppSecurity', 'ZebAppSupportWS');
###@dirs = ('/cygdrive/u/x/code');
@dirs = @ARGV;

find( sub {
        ###m/\.vb$/ and push @files, $File::Find::name
        # get all files but skip dotfiles
        ! m/^..?$/ and -f and push @files, $File::Find::name
      }, @dirs
);


my %months = (
   "0"  => "Jan",
   "1"  => "Feb",
   "2"  => "Mar",
   "3"  => "Apr",
   "4"  => "May",
   "5"  => "Jun",
   "6"  => "Jul",
   "7"  => "Aug",
   "8"  => "Sep",
   "9"  => "Oct",
   "10" => "Nov",
   "11" => "Dec",
);

print "\nusing files younger than 90 days\n";
print "\nskipping files containing 'This code was genrated by a tool'\n\n";

foreach $f ( @files ) {
  $then = time()-(90*86800);
  ($x) = (stat("$f"))[9];

  next if $x < $then;

  $skipme = 0;
  open FH, "$f" or die "Error: $0: $!";
  while ( <FH> ){
    if ( m/This code was generated by a tool/ ) {
      $skipme = 1;
    }
  }
  close FH;

  next if $skipme;

  $d = (localtime($x))[3];
  $m = (localtime($x))[4];
  $y = (localtime($x))[5];
  $h = (localtime($x))[2];
  $min = (localtime($x))[1];

  $f =~ s:/:\\:g;  # display paths to not confuse Windows users

  # For >| into CSV file
  print "$f,";
  printf "%02d", $d;
  print $months{$m};
  print eval($y+1900);
  printf " %02d:%02d", $h, $min;
  print "\n";
}
